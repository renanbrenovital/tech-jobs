{"version":3,"sources":["assets/logo-white.png","assets/logo-black.png","styles/global.ts","styles/theme.ts","context/themeContext.tsx","components/atoms/ThemeSwitcher/styles.ts","components/atoms/ThemeSwitcher/index.tsx","components/organisms/Header/styles.ts","components/organisms/Header/index.tsx","components/organisms/Main/styles.ts","components/organisms/Main/index.tsx","components/atoms/Author/styles.ts","components/atoms/Author/index.tsx","components/atoms/Text/styles.ts","components/atoms/Text/index.tsx","components/molecules/Copyright/index.tsx","components/organisms/Footer/styles.ts","components/organisms/Footer/index.tsx","components/atoms/Loader/styles.ts","components/atoms/Loader/index.tsx","components/atoms/Button/styles.ts","components/atoms/Button/index.tsx","components/atoms/Select/styles.ts","components/atoms/Select/index.tsx","components/atoms/Modal/styles.ts","components/atoms/Modal/index.tsx","components/atoms/Image/styles.ts","components/atoms/Image/index.tsx","components/atoms/Title/styles.ts","components/atoms/Title/index.tsx","components/molecules/Job/styles.ts","components/molecules/Job/index.tsx","components/atoms/Input/styles.ts","components/atoms/Input/index.tsx","components/molecules/JobDetails/styles.ts","services/api.ts","components/molecules/JobDetails/index.tsx","components/organisms/Jobs/styles.ts","components/organisms/Jobs/index.tsx","components/templates/JobsTemplate/index.tsx","pages/Home/index.tsx","App.tsx","hooks/useTheme.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","lightTheme","colors","text","title","primary","background","loader","success","error","card","shadow","button","border","hover","pagination","darkTheme","AppContext","createContext","theme","toggle","Input","styled","input","Label","label","ThemeSwitcher","data","id","type","onChange","checked","htmlFor","Container","header","Header","Consumer","value","src","logoWhite","logoBlack","alt","width","Main","main","props","children","Link","a","url","name","href","target","Text","p","Copyright","Author","footer","Footer","Svg","svg","Path","path","attrs","fill","Loader","xmlns","height","viewBox","d","attributeName","from","to","dur","repeatCount","Button","Select","select","Modal","div","modalVisible","modalClose","modalContent","className","onClick","Img","img","H1","h1","H2","level","li","Card","Content","Job","job","index","modalOpen","Image","Title","company","slug","placeholder","Form","graphql_url","query","fetch","method","headers","body","JSON","stringify","response","JobDetails","useState","loading","setLoading","setError","subscribe","setSubscribe","setName","email","setEmail","apply","mutation","api","json","locationNames","websiteUrl","tags","map","tag","join","commitment","description","slice","e","List","ul","Pagination","Options","Setting","Buttons","Jobs","jobs","functionComponentElement","React","createElement","Fragment","modalData","setModalData","page","setPage","perPage","setPerPage","indexLast","indexFirst","currentJobs","totalPages","Math","round","length","pages","Array","_","i","selectPage","useCallback","event","Number","currentTarget","jobsPerPage","jobSlug","companySlug","key","defaultValue","number","option","JobsTemplate","Home","setJobs","useEffect","graphqlQuery","App","initialTheme","localStorage","getItem","setTheme","setItem","useTheme","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5081e5ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-white.9043cfed.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-black.755d19ed.png\";","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`  \n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }  \n\n  body {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    font-family: 'Quicksand', sans-serif;\n    font-size: 62.5%;\n    font-style: normal;\n    font-weight: 400;\n    letter-spacing: 0;\n    transition: all 0.25s linear;\n  }\n`;","export const lightTheme = {\n  colors: {\n    text: '#222',\n    title: '#FFF',\n    primary: '#72D5B4',\n    background: '#DDD',\n    loader: '#020100',\n    success: '#28502E',\n    error: '#AF1B3F'\n  },\n  card: {\n    title: '#02010A',\n    text: '#020100',\n    shadow: 'rgba(0, 0, 0, 0.3)', \n    background: 'linear-gradient(to bottom left, #FFF 40%, #DDD 100%)'\n  },\n  button: {\n    border: '#020100',\n    text: '#020100',\n    hover: {\n      background: '#02010030',\n    }\n  },\n  pagination: {\n    background: '#FFFFFF99',\n  }\n}\n\nexport const darkTheme = {\n  colors: {\n    title: '#FFF',\n    text: '#DDD',\n    primary: '#02010A',\n    background: '#020100',\n    loader: '#FFF',\n    success: '#28502E',\n    error: '#AF1B3F'\n  },\n  card: {\n    title: '#72D5B4',\n    text: '#F2F2F2',\n    shadow: 'rgba(255, 255, 255, 0.1)', \n    background: 'linear-gradient(to bottom left, #020100 40%, #02010A 100%)'\n  },\n  button: {\n    border: '#72D5B4',\n    text: '#72D5B4',\n    hover: {\n      background: '#70CB7630',\n    }\n  },\n  pagination: {\n    background: '#02010A99',\n  }\n}","import { createContext } from 'react';\nimport { ThemeState } from '../types/types';\n\nconst AppContext = createContext<ThemeState>({\n  theme: 'light',\n  toggle: () => {}\n});\n\nexport default AppContext;","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  visibility: hidden;\n  position: absolute;\n  margin-left: -9999px;\n\n  :checked + label:after {\n    margin-left: 28px;\n  }\n`;\n\nexport const Label = styled.label`  \n  display: block;\n  position: relative;\n  cursor: pointer;\n  outline: none;\n  user-select: none;\n  padding: 2px;\n  width: 60px;\n  height: 30px;\n  background-color: ${({ theme }) => theme.colors.title};\n  border-radius: 30px;\n  transition: background 0.4s;\n  \n  :before, :after {\n    display: block;\n    position: absolute;\n    content: \"\";\n  }\n\n  :before {\n    top: 2px;\n    left: 2px;\n    bottom: 2px;\n    right: 2px;\n    background-color: ${({ theme }) => theme.colors.primary};\n    border-radius: 30px;\n    transition: background 0.4s;\n  }\n\n  :after {\n    top: 4px;\n    left: 4px;\n    bottom: 4px;\n    width: 24px;\n    background-color: ${({ theme }) => theme.colors.title};\n    border-radius: 20px;\n    transition: margin 0.4s, background 0.4s;\n  }\n`;","import React from 'react';\nimport { Input, Label } from './styles';\nimport { TypeThemeSwitcher } from '../../../types/types';\n\nconst ThemeSwitcher = ({ data: { theme, toggle }}: TypeThemeSwitcher) => {\n  return (\n    <> \n      <Input id=\"switch\" type=\"checkbox\" onChange={() => toggle()} checked={theme === 'dark'} />\n      <Label htmlFor=\"switch\" />\n    </>\n  );\n};\n\nexport default ThemeSwitcher;","import styled from 'styled-components';\n\nexport const Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100vw;\n  height: 10vh;\n  padding: 0 5vw;\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.title};\n`;","import React from 'react';\n\nimport AppContext from '../../../context/themeContext';\n\nimport ThemeSwitcher from '../../atoms/ThemeSwitcher';\nimport logoWhite from '../../../assets/logo-white.png';\nimport logoBlack from '../../../assets/logo-black.png';\n\nimport { Container } from './styles';\n\nconst Header = () => {  \n  return (\n    <AppContext.Consumer>\n    {value => \n      <Container>\n        <img src={value.theme === 'dark' ? logoWhite : logoBlack} alt=\"logo\" width={150} />\n        <ThemeSwitcher data={{theme: value.theme, toggle: value.toggle}} />\n      </Container>\n    }\n  </AppContext.Consumer>\n  );\n}\n\nexport default Header;","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  display: flex;\n  justify-content: center;\n  height: 80vh;\n  background-color: ${({ theme }) => theme.colors.background }\n`;","import React from 'react';\n\nimport { Children } from '../../../types/types';\nimport { Main } from './styles';\n\nexport default (props: Children) => <Main>{props.children}</Main>;","import styled from 'styled-components';\n\nexport const Link = styled.a`\n  color: ${({ theme }) => theme.card.text};\n  font-weight: bold;\n  text-decoration: none;\n\n  :hover {\n    text-decoration: underline;\n  }\n`;","import React from 'react';\nimport { Author } from '../../../types/types';\nimport { Link } from './styles';\n\nexport default ({ url, name }: Author) => <Link href={url} target=\"blank\">{name}</Link>;","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  color: ${({ theme }) => theme.card.text};\n  font-size: 1rem;  \n  font-weight: 400;\n  margin: 1vw;\n  padding: 0;\n`;","import React from 'react';\nimport { TypeText } from '../../../types/types';\nimport { Text } from './styles';\n\nexport default (props: TypeText) => <Text {...props}>{props.children}</Text>;","import React from 'react';\nimport Author from '../../atoms/Author';\nimport Text from '../../atoms/Text';\n\nconst Copyright = () => {\n  return (\n    <Text>Created by <Author url=\"https://github.com/renanbrenovital/tech-jobs\" name=\"Renan Vital\" /></Text>\n  );\n}\n\nexport default Copyright;","import styled from 'styled-components';\n\nexport const Container = styled.footer`\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 10vh;\n  padding: 0 5vw;\n  background-color: ${({ theme }) => theme.colors.primary};\n`;","import React from 'react';\n\nimport Copyright from '../../molecules/Copyright';\nimport { Container } from './styles';\n\nconst Footer = () => {\n  return (\n    <Container>\n      <Copyright />\n    </Container>\n  );\n}\n\nexport default Footer;","import styled from 'styled-components';\n\nexport const Svg = styled.svg`\n  display: flex;\n  align-self: center;\n  justify-self: center;\n`;\n\nexport const Path = styled.path.attrs(props => ({\n  fill: props.theme.colors.loader,\n}))``;","import React from 'react';\nimport { Svg, Path } from './styles';\n\nconst Loader = () => (\n    <Svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 50 50\">\n      <Path d=\"M25,5A20.14,20.14,0,0,1,45,22.88a2.51,2.51,0,0,0,2.49,2.26h0A2.52,2.52,0,0,0,50,22.33a25.14,25.14,0,0,0-50,0,2.52,2.52,0,0,0,2.5,2.81h0A2.51,2.51,0,0,0,5,22.88,20.14,20.14,0,0,1,25,5Z\">\n        <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.5s\" repeatCount=\"indefinite\"/>\n      </Path>\n    </Svg>\n  );\n\nexport default Loader;","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  color: ${({ theme }) => theme.button.text};\n  padding: 0.8rem;\n  font-size: 0.8rem;\n  text-transform: uppercase;\n  border-radius: 4px;\n  font-weight: bold;\n  display: block;\n  width: 100%;\n  cursor: pointer;\n  border: 1px solid ${({ theme }) => theme.button.border};  \n  background: transparent;\n  outline:0;\n  \n  &:hover {\n    background-color: ${({ theme }) => theme.button.hover.background};\n  }  \n`;","import React from 'react';\nimport { TypeButton } from '../../../types/types';\nimport { Button } from './styles';\n\nexport default ( props: TypeButton) => <Button {...props}>{props.children}</Button>;","import styled from 'styled-components';\n\nexport const Select = styled.select`\n  color: ${({ theme }) => theme.button.text};\n  font-size: 0.8rem;\n  text-transform: uppercase;\n  border-radius: 4px;\n  font-weight: bold;\n  display: block;\n  cursor: pointer;\n  border: 1px solid ${({ theme }) => theme.button.border};  \n  background: transparent;\n  outline:0;\n  width: 7vh;\n  height: 5vh;\n  \n  &:hover {\n    background-color: ${({ theme }) => theme.button.hover.background};\n  }  \n`;","import React from 'react';\nimport { TypeSelect } from '../../../types/types';\nimport { Select } from './styles';\n\nexport default ( props: TypeSelect) => <Select {...props}>{props.children}</Select>;","import styled from 'styled-components';\n\nexport const Modal = styled.div`\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: ${({ theme }) => theme.colors.primary};\n\n  &.fade-in {\n    opacity: 1;\n    transition: opacity linear 0.3s;\n    visibility: visible;\n  }\n\n  &.fade-out {\n    opacity: 0;\n    transition: opacity linear 0.3s;\n    visibility: hidden;\n  }\n\n  > button {\n    position: absolute;\n    top: 5vh;\n    right: 5vw;\n    display: flex;\n    align-self: flex-start;\n    justify-self: flex-start;\n    justify-content: center;\n    align-items: center;\n    width: 3vw;\n    height: 3vw;\n  }\n`;","import React from 'react';\n\nimport Button from '../../atoms/Button';\n\nimport { Modal } from './styles';\nimport { TypeModal } from '../../../types/types';\n\nexport default ({ data: { modalVisible, modalClose, modalContent} }: TypeModal) =>   \n(\n  <Modal className={modalVisible ? 'fade-in' : 'fade-out'}>\n      <Button onClick={() => modalClose()}>X</Button>\n      {modalContent}\n  </Modal>\n);","import styled from 'styled-components';\n\nexport const Img = styled.img`\n  height: auto;\n  max-width: 100%;\n  vertical-align: middle;\n`;","import React from 'react';\nimport { Image } from '../../../types/types';\nimport { Img } from './styles';\n\nexport default ({ src }: Image) => <Img src={src} />;","import styled from 'styled-components';\n\nexport const H1 = styled.h1`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.card.title};\n  margin: 0;\n  padding: 0;\n`;\n\nexport const H2 = styled.h1`\n  font-size: 1.3rem;\n  color: ${({ theme }) => theme.card.title};\n  margin: 0;\n  padding: 0;\n`;","import React from 'react';\nimport { Heading } from '../../../types/types';\nimport { H1, H2 } from './styles';\n\nexport default ({ level, children }: Heading) => level === 1 ? <H1>{children}</H1> : <H2>{children}</H2>;","import styled from 'styled-components';\n\nexport const Container = styled.li`\n  display: flex;\n  width: 220px;\n\n  @media(max-width: 600px) {\n    width: 80vw;\n    margin: 3vh 0;\n  }\n\n  active {\n    background-color: 'red';\n  }\n`;\n\nexport const Card = styled.div`\n  background-color: white;\n  border-radius: 0.25rem;\n  box-shadow: 0 20px 40px -14px ${({ theme }) => theme.card.shadow};\n  overflow: hidden;\n  margin-bottom: 3vw;\n  display: flex;\n  flex-direction: column;\n  background: ${({ theme }) => theme.card.background};\n  transition: all .2s ease-in-out;\n\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 1rem;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  p.company {\n    margin: 3vh 0;\n  }\n`;","import React from 'react';\n\nimport Image from '../../../components/atoms/Image';\nimport Title from '../../../components/atoms/Title';\nimport Text from '../../../components/atoms/Text';\nimport Button from '../../../components/atoms/Button';\n\nimport { Container, Card, Content } from './styles';\nimport { DataJob } from '../../../types/types';\n\nconst Job = ({ data: { job, index, modalOpen } }: DataJob) => {\n  return (\n    <Container>\n      <Card>\n        <Image src={`https://picsum.photos/500/300/?image=${index+1}`} />\n        <Content>\n          <Title level={2}>{job.title}</Title>\n          <Text className=\"company\"><small>Company: {job.company.name}</small></Text>\n          <Button onClick={() => modalOpen(job.slug, job.company.slug, index)}>Job Details</Button>\n        </Content>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Job;","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  color: ${({ theme }) => theme.card.title};\n  padding: 0.8rem;\n  font-size: 0.8rem;\n  border-radius: 4px;\n  font-weight: bold;\n  display: block;\n  width: 100%;\n  cursor: pointer;\n  border: 1px solid ${({ theme }) => theme.button.border};  \n  background: transparent;\n  outline:0;\n  \n  &:hover {\n    background-color: ${({ theme }) => theme.button.hover.background};\n  }  \n\n  ::placeholder {\n    text-transform: capitalize;\n  }\n`;","import React from 'react';\nimport { TypeInput } from '../../../types/types';\nimport { Input } from './styles';\n\nexport default ( props: TypeInput) => <Input {...props} placeholder={props.name} />;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 90vw;\n`;\n\nexport const Card = styled.div`\n  background-color: white;\n  border-radius: 0.25rem;\n  box-shadow: 0 20px 40px -14px ${({ theme }) => theme.card.shadow};\n  overflow: hidden;\n  margin-bottom: 3vw;\n  display: flex;\n  flex-direction: row;\n  background: ${({ theme }) => theme.card.background};\n  \n  @media(max-width: 900px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 1rem;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  > button {\n    margin-top: 3vh;\n  }\n\n  a {\n    color: ${({ theme }) => theme.card.title};\n  }\n\n  p.error {\n    color: ${({ theme }) => theme.colors.error};\n    font-weight: bold;\n  }\n\n  p.success {\n    color: ${({ theme }) => theme.colors.success};\n    font-weight: bold;\n  }\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 1vw;\n  margin-top: 3vh;\n\n  > button {\n    width: 20%;\n  }\n\n  > input {\n    width: 40%;\n  }\n\n  > input[type=\"text\"], > button {\n    text-transform: capitalize;\n  }\n\n  > input[type=\"email\"], > button {\n    margin-left: 1vw;\n  }\n\n  @media(max-width: 600px) {\n    flex-direction: column;\n\n    > button, > input {\n      width: 100%;\n    }\n\n    > input[type=\"email\"], > button {\n      margin-left: 0;\n      margin-top: 1vh;\n    }\n  }\n\n`;","export default async (graphql_url:string, query:string) => {\n  const response = await fetch(graphql_url, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json'},\n    body: JSON.stringify({ query })\n  });\n\n  return response;\n}","import React, { useState } from 'react';\n\nimport Image from '../../../components/atoms/Image';\nimport Title from '../../../components/atoms/Title';\nimport Text from '../../../components/atoms/Text';\nimport Button from '../../../components/atoms/Button';\nimport Input from '../../../components/atoms/Input';\nimport Loader from '../../../components/atoms/Loader';\n\nimport { Container, Card, Content, Form } from './styles';\nimport { DataJobDetails } from '../../../types/types';\n\nimport api from '../../../services/api';\n\nconst JobDetails = ({ data: { job, index } }: DataJobDetails) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [subscribe, setSubscribe] = useState(false);\n  \n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n\n  const apply = async () => { \n    setError('');\n    \n    if(name === '' || email === ''){\n      setError('Name and Email are required');\n      setLoading(false);\n      return;\n    } \n\n    setLoading(true);\n\n    const mutation = `mutation {\n      subscribe(input:{name: \"${name}\", email: \"${email}\"}) {\n        subscribe\n      }\n    }`;\n\n    const response = await api('https://api.graphql.jobs/', mutation);\n    const { data } = await response.json();\n    \n    if(data.subscribe.subscribe) {\n      setSubscribe(true);\n    }\n    else {\n      setError('Error when trying to apply for work, try later please!');\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <Container>\n      <Card>\n          <Image src={`https://picsum.photos/500/300/?image=${index+1}`} />\n          <Content>\n            <Title level={1}>{job.title}</Title>\n            {job.locationNames && <Text><b>Location:</b> {job.locationNames}</Text>}\n            <Text>\n              <b>Company: </b> \n              <a\n                href={job.company.websiteUrl}\n                title={`Website ${job.company.name}`}\n                target=\"blank\"\n              >\n                {job.company.name}\n              </a>\n            </Text>\n            <Text><b>Skills:</b> {job.tags.map(tag => tag.name).join(', ')}</Text>\n            <Text><b>Time:</b> {job.commitment.title}</Text>\n            <Text><b>Description:</b> {job.description.slice(0, 200)} . . .</Text>\n            {error !== '' && <Text className=\"error\">{error}</Text>}\n            {loading ? <Loader /> : \n              subscribe ? <Text className=\"success\">Your application was successful!</Text>\n                :\n                <Form>\n                  <Input name=\"name\" type=\"text\" onChange={e => setName(e.target.value)} />\n                  <Input name=\"email\" type=\"email\" onChange={e => setEmail(e.target.value)} />\n                  <Button onClick={() => apply()}>Apply</Button>\n                </Form>\n            }\n          </Content>\n      </Card>\n    </Container>\n  );\n}\n\nexport default JobDetails;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  width: 90%;\n  padding: 3vw 3vw 5vw 3vw;\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  list-style: none;\n  overflow-x: hidden;\n\n  > li {\n    margin-left: 3vw;\n  }\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const Pagination = styled.div`\n  position: fixed;\n  bottom: 10vh;\n  left: 0;\n  background: ${({ theme }) => theme.pagination.background};\n  width: 100vw;\n  padding: 0.5vw 5vw;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Options = styled.div`\n  max-width: 50vw;\n  display: none;\n  flex-direction: row;\n  align-items: center;\n\n  @media(max-width: 600px) {\n    display: flex;\n  }\n`;\n\nexport const Setting = styled.div`\n  max-width: 50vw;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  \n  > button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 1vw;\n    height: 1vw;\n    margin-right: 1vw;\n  }\n\n  > button.active {\n    background-color: ${({ theme }) => theme.button.hover.background};\n  }\n\n  @media(max-width: 600px) {\n    display: none;\n  }\n`;\n\n","import React, { useState, useCallback } from 'react';\n\nimport Loader from '../../atoms/Loader';\nimport Button from '../../atoms/Button';\nimport Select from '../../atoms/Select';\nimport Modal from '../../../components/atoms/Modal';\nimport Text from '../../atoms/Text';\nimport Job from '../../molecules/Job';\nimport JobDetails from '../../molecules/JobDetails';\n\nimport { Container, List, Pagination, Options, Buttons, Setting } from './styles';\nimport { DataJobs, EventSelectElement } from '../../../types/types';\n\nimport api from '../../../services/api';\n\nconst Jobs = ({ data: { jobs, loading } }: DataJobs) => \n{\n  const functionComponentElement = React.createElement(React.Fragment);\n  const [modalData, setModalData] = useState({modalVisible: false, modalClose: () => {}, modalContent: functionComponentElement});\n  \n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n\n  const indexLast = perPage * page;\n  const indexFirst = indexLast - perPage;\n  const currentJobs = jobs.slice(indexFirst, indexLast);\n\n  const totalPages = Math.round(jobs.length / perPage);\n  const pages = Array(totalPages).fill(0).map((_,i) => i + 1);\n\n  const selectPage = useCallback((event: EventSelectElement) => {\n    setPage(Number(event.currentTarget.value));\n  }, [setPage]);\n  \n  const jobsPerPage = useCallback((event: EventSelectElement) => {\n    setPerPage(Number(event.currentTarget.value));\n    setPage(1);\n  }, [setPage, setPerPage]);\n\n  const modalClose = () => {\n    setModalData({modalVisible: false, modalClose, modalContent: functionComponentElement});\n  }\n  \n  const modalOpen = async (jobSlug:string, companySlug:string, index:number) => {    \n    const query = `{\n      job(input:{jobSlug:\"${jobSlug}\", companySlug:\"${companySlug}\"}) {\n        slug,\n        title,\n        description,\n        locationNames,\n        tags {\n          name\n        },\n        commitment {\n          title\n        },\n        company {\n          name,\n          slug,\n          websiteUrl\n        }\n      }\n    }`;\n\n    const response = await api('https://api.graphql.jobs/', query);\n    const { data: { job } } = await response.json();\n    \n    setModalData({\n      modalVisible: true,\n      modalClose,\n      modalContent: <JobDetails data={{ job, index }} />\n    });\n  }\n\n  return (      \n    <>\n      {loading\n        ?\n          <Loader />\n        : \n        <Container>\n          <Modal data={modalData} />\n          <List>\n            {currentJobs?.map((job, index) => \n              <Job\n                key={index}\n                data={{ job, index, modalOpen }}\n              />\n            )}\n          </List>\n          <Pagination id='pagination'>\n            <Options>\n              <Text>Select page:</Text>\n              <Select onChange={selectPage} defaultValue={page}>\n                {pages.map(number => \n                  <option\n                    key={number}\n                    value={number}\n                  >\n                    {number}\n                  </option>\n                )}\n              </Select>\n            </Options>\n            <Buttons>\n              {pages.map(number => \n                <Button\n                  key={number}\n                  className={page === number ? 'active': ''}\n                  onClick={() => setPage(number)}\n                >\n                  {number}\n                </Button>\n              )}\n            </Buttons>\n            <Setting>\n              <Text>Per page:</Text>\n              <Select onChange={jobsPerPage} defaultValue={perPage}>\n                {[5,10,15,20].map(option => \n                  <option\n                    key={option}\n                    value={option}\n                  >\n                    {option}\n                  </option>\n                )}\n              </Select>\n            </Setting>\n          </Pagination>\n        </Container>\n      }\n    </>\n  )\n};\n\nexport default Jobs;","import React from 'react';\n\nimport Header from '../../organisms/Header';\nimport Main from '../../organisms/Main';\nimport Footer from '../../organisms/Footer';\n\nimport { DataJobs } from '../../../types/types';\nimport Jobs from '../../organisms/Jobs';\n\nconst JobsTemplate = ({ data }: DataJobs) => {  \n  return (\n    <>\n      <Header />\n      <Main>\n        <Jobs data={data} />\n      </Main>\n      <Footer />\n    </>\n  )\n};\n\nexport default JobsTemplate;","import React, { useEffect, useState } from 'react';\nimport JobsTemplate from '../../components/templates/JobsTemplate';\nimport api from '../../services/api';\n\nconst Home = () => {\n  const [loading, setLoading] = useState(false);\n  const [jobs, setJobs] = useState([]);\n  \n  const query = `{\n    jobs {\n      slug,\n      title,\n      tags {\n        name\n      },\n      company {\n        name,\n        slug\n      }\n    }\n  }`;\n\n  useEffect(() => {\n    const graphqlQuery = async () => {\n      setLoading(true);\n      const response = await api('https://api.graphql.jobs/', query);\n      const { data } = await response.json();\n      setJobs(data.jobs);\n      setLoading(false);\n    } \n\n    graphqlQuery();\n  }, [query]);\n\n  return <JobsTemplate data={{jobs, loading}} />;\n};\n\nexport default Home;","import React from 'react';\nimport { useTheme } from './hooks/useTheme';\n\nimport GlobalStyles from './styles/global';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './styles/theme';\n\nimport Home from './pages/Home';\nimport AppContext from './context/themeContext';\nimport { ThemeState } from './types/types';\n\nconst App = () => {  \n  const { theme, toggle }:ThemeState = useTheme();\n  \n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <GlobalStyles />\n      <AppContext.Provider value={{theme, toggle}}>\n        <Home />\n      </AppContext.Provider>     \n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { useState, useCallback } from 'react';\n\nexport const useTheme = () => {\n  const initialTheme = localStorage.getItem('theme') || 'light';\n  const [theme, setTheme] = useState(initialTheme);\n  \n  const toggle = useCallback(() => {\n    if(theme === 'light') {\n      localStorage.setItem('theme', 'dark');      \n      setTheme('dark');\n    }\n    else {\n      localStorage.setItem('theme', 'light');      \n      setTheme('light');\n    }\n  }, [theme]);\n\n  return {theme, toggle};\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}